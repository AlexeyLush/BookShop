@using Domain.Models
@using Domain.DataAccess
@inject BooksDbContext _context



@{
    ViewData["Title"] = "Админ панель";
    var books = _context.Books.ToList();
    var genres = _context.Genres.ToList();
}

<p>Книги</p>


<p>
    <a asp-action="Create" asp-controller="Books">Добавить книгу</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th scope="col">Название</th>
            <th scope="col">Жанр</th>
            <th scope="col">Автор</th>
            <th scope="col">Год</th>
            <th scope="col">Действия</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var book in books)
        {
            <tr>
                <td>@book.Title</td>
                <td>@_context.Genres.FirstOrDefault(x => x.Id == book.GenreId).Title</td>
                <td>@book.Author</td>
                <td>@book.Year</td>
                <td>
                    <a asp-action="Edit" asp-controller="Books" class="btn btn-warning" asp-route-id="@book.Id">Редактировать</a>
                    <a asp-action="Delete" asp-controller="Books" class="btn btn-danger" asp-route-id="@book.Id">Удалить</a>
                </td>
            </tr>
        }

    </tbody>
</table>


<p style="margin-top: 50px;">Жанры</p>

<p>
    <a asp-action="Create" asp-controller="Genres">Добавить жанр</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th scope="col">Название</th>
            <th scope="col">Действия</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var genre in genres)
        {
        <tr>
            <td>@genre.Title</td>
            <td>
                <a asp-action="Edit" asp-controller="Genres" class="btn btn-warning" asp-route-id="@genre.Id">Редактировать</a>
                <a asp-action="Delete" asp-controller="Genres" class="btn btn-danger" asp-route-id="@genre.Id">Удалить</a>
            </td>
        </tr>
        }

    </tbody>
</table>



